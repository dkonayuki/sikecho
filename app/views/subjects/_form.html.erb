<div id="subject-edit" data-id="<%= @subject.id %>">
	<%= form_for(@subject) do |f| %>
	  
	<div class="skc-box skc-box-lg">
			<div class="skc-box-content">
				<div class="skc-box-thumbnail">
					<%= image_tag("lecture.png")  %>
				</div>
				<div class="skc-box-title">
	    		<%= f.text_field :name, class: 'form-control', placeholder: t('.subject_name'), required: 'true' %>
	    		<% if @subject.errors[:name].count > 0 %>
	    			<ul>
			      <% @subject.errors.full_messages_for(:name).each do |msg| %>
			        <li class="error-msg"><%= msg %></li>
			      <% end %>
			      </ul>
	    		<% end %>
					<hr />
		    </div>
		    
				<div class="skc-box-desc">
					
					<% if @subject.picture.exists? %>
					<div class="fileinput fileinput-exists" data-provides="fileinput">
					<% else %>
					<div class="fileinput fileinput-new" data-provides="fileinput">
					<% end %>
					  <div class="fileinput-new thumbnail thumbnail-sm">
					  </div>
					  <div class="fileinput-preview fileinput-exists thumbnail thumbnail-preview-sm">
					  <% if @subject.picture.exists? %>
					  	<%= image_tag @subject.picture.url(:original) %>
				  	<% end %>
					  </div>
					  <div>
					    <span class="btn btn-default btn-file">
					    	<span class="fileinput-new"><%= t('.select_image') %></span>
					    	<span class="fileinput-exists"><%= t('.change_image') %></span>
					  		<%= f.file_field :picture %>
				    	</span>
					    <a href="#" class="btn btn-default fileinput-exists" data-dismiss="fileinput"><%= t('.remove_image') %></a>
					  </div>
					  <% if @subject.errors[:picture] %>
							<ul>
				      <% @subject.errors.full_messages_for(:picture).each do |msg| %>
				        <li class="error-msg"><%= msg %></li>
				      <% end %>
				      </ul>
						<% end %>
					</div>
					
					<hr />
					<p>
						<strong><%= t('.description') %>:</strong>
						<%= f.text_area :description, class: 'form-control', id: 'subject-description' %>
					</p>
					<p>
						<strong><%= t('.course') %>:</strong>
						<% if @subject.course %>
						<%= f.select :course_id	, options_from_collection_for_select(@courses,"id","name", selected: @subject.course.id), {}, {class: 'selectpicker show-tick', data: {width: 'auto'}} %>
						<% else %>
						<%= f.select :course_id	, options_from_collection_for_select(@courses,"id","name"), {}, {class: 'selectpicker show-tick', data: {width: 'auto'}} %>
						<% end %>
		    		<% if @subject.errors[:course_id].count > 0 %>
		    			<ul>
				      <% @subject.errors.full_messages_for(:course_id).each do |msg| %>
				        <li class="error-msg"><%= msg %></li>
				      <% end %>
				      </ul>
		    		<% end %>
					</p>
					<p>
						<strong><%= t('uni_year') %>:</strong>
						<% if @subject.uni_year %>
						<%= f.select :uni_year_id	, options_from_collection_for_select(@uni_years,"id","name", selected:@subject.uni_year.id), {}, {class: 'selectpicker show-tick', data: {width: 'auto'}} %>
						<% else %>
						<%= f.select :uni_year_id	, options_from_collection_for_select(@uni_years,"id","name"), {}, {class: 'selectpicker show-tick', data: {width: 'auto'}} %>
						<% end %>
		    		<% if @subject.errors[:uni_year_id].count > 0 %>
		    			<ul>
				      <% @subject.errors.full_messages_for(:uni_year_id).each do |msg| %>
				        <li class="error-msg"><%= msg %></li>
				      <% end %>
				      </ul>
		    		<% end %>
	    		</p>
	    		<p>
						<strong><%= t('semester') %>:</strong>
						<% if @subject.semester %>
						<%= f.select :semester_id, options_from_collection_for_select(@semesters,"id","name",selected: @subject.semester.id), {}, {class: 'selectpicker show-tick', data: {width: 'auto'}} %>
						<% else %>
						<%= f.select :semester_id, options_from_collection_for_select(@semesters,"id","name"), {}, {class: 'selectpicker show-tick', data: {width: 'auto'}} %>
						<% end %>
		    		<% if @subject.errors[:semester_id].count > 0 %>
		    			<ul>
				      <% @subject.errors.full_messages_for(:semester_id).each do |msg| %>
				        <li class="error-msg"><%= msg %></li>
				      <% end %>
				      </ul>
		    		<% end %>
					</p>
					<p>
						<strong><%= t('year') %>:</strong>
						<% if @subject.year %>
						<%= f.select :year, options_for_select(@years, selected: @subject.year), {}, {class: 'selectpicker show-tick', data: {width: 'auto'}} %>
						<% else %>
						<%= f.select :year, options_for_select(@years), {}, {class: 'selectpicker show-tick', data: {width: 'auto'}} %>
						<% end %>
					</p>
					<p>
						<strong><%= t('.place') %>:</strong>
						<%= f.text_field :place, class: 'form-control form-control-inline' %>
					</p>
					<p>
						<strong><%= t('teacher_plural') %>:</strong>
						<% if @subject.teachers %>
						<%= select_tag :teachers, options_for_select(@teachers.map { |t| [t.name_kanji, t.id] }, selected: @subject.teachers.map { |t| t.id }), class: 'selectpicker show-tick', data: {width: 'auto', "live-search" => "true"}, multiple: true, title: '' %>
						<% else %>
						<%= select_tag :teachers, options_for_select(@teachers.map { |t| [t.name_kanji, t.id] }), class: 'selectpicker show-tick', data: {width: 'auto', "live-search" => "true"}, multiple: true, title: '' %>
						<% end %>
					</p>
					
					<hr />
					
					<p>
						<h5><%= t('.schedule') %></h5>
						<%= render partial: 'schedule_table', locals: {periods: @periods} %>
					</p>
					
					<hr />
					
 					<a name="syllabus"></a>
					<p>
						<h5><%= t('syllabus') %></h5>
						<% if @subject.outlines.count > 0 %>
							<%= select_tag :number_of_outlines, options_for_select(@number_of_outlines_list, selected: @subject.outlines.count), class: 'selectpicker show-tick', data: {width: 'auto', link: outline_subject_path}, id: 'number-of-outlines-select' %>
							<%= link_to new_auto_subject_path(auto_type: 0), {class: 'btn btn-default syllabus-auto', id: 'new-auto-outline'} do %>
								<span class="glyphicon glyphicon-plus"></span>
							<% end %>
							<div id="syllabus-table">
								<%= render 'syllabus_table', editable: true %>
							</div>
						<% else %>
							<%= select_tag :number_of_outlines, options_for_select(@number_of_outlines_list, selected: Subject::DEFAULT_OUTLINE), class: 'selectpicker show-tick', data: {width: 'auto'} %>
						<% end %>
					</p>
					
					<div class='tag-form'>
						<div class='tag-menu'>
				   		<div class="btn btn-primary btn-xs tag-menu-btn hidden-xs"><%= t('seminar') %></div>
				   		<div class="btn btn-primary btn-xs tag-menu-btn hidden-xs"><%= t('all_year') %></div>
				   		<div class="btn btn-primary btn-xs tag-menu-btn hidden-xs"><%= t('intensive_course') %></div>
				   		<div id="remove-all" class="btn btn-danger btn-xs"><span class="glyphicon glyphicon-remove"></span><%= t('clear') %></div>
			      </div>
			      <%= text_area_tag 'tags', nil, class: 'tag-input' %>
			      <div class="tag-indicator">
			      	<span class="glyphicon glyphicon-chevron-right"></span>
			      </div>
			      <div class="tag-form-title"><%= t('tag_plural') %></div>
					</div>
					
				</div><!-- end of skc-box-desc -->
				<br />
				<%= f.submit class: 'btn btn-success col-sm-2 col-sm-offset-5 col-xs-12 col-xs-offset-0' %>
			</div><!-- end of skc-box-content -->
		</div><!-- end of skc-box -->
		
	<% end %>
</div>

<script>
	$(document).ready(function(){
		
		$('.selectpicker').selectpicker();

		$("#subject-description").wysihtml5({locale: I18n["meta"]["code_country"]});
		var tags;		
		// instantiate the bloodhound suggestion engine
		tags = new Bloodhound({
		  datumTokenizer: function(d) { return Bloodhound.tokenizers.whitespace(d.name); },
		  queryTokenizer: Bloodhound.tokenizers.whitespace,
		  limit: 5,
		  prefetch: {
		  	ttl: 0,
		    url: '/tags.json', // get tags from application controller
		    filter: function(list) {
		      return $.map(list, function(tag) { return { name: tag.name }; });
		    }
		  }
		});
		 
		// initialize the bloodhound suggestion engine
		tags.initialize();
		
		//initiate tagsinput	
		$('.tag-input').tagsinput({
			tagClass: function(item) {
		    switch (item) {
		    	case I18n["seminar"]: return 'label label-danger';
		      case I18n["all_year"]: return 'label label-warning';
		      case I18n["intensive_course"]: return 'label label-success';
		      default: return 'label label-info';
		    }
	  	},
			confirmKeys: [13, 9]
		});

		$('.tag-input').tagsinput('input').typeahead(null, {
			// instantiate the typeahead UI
			  displayKey: 'name',
	 			source: tags.ttAdapter()
		}).bind('typeahead:selected', $.proxy(function (obj, datum) {  
		  this.tagsinput('add', datum.value);
		  //this.tagsinput('input').typeahead('val','');
		}, $('.tag-input')));

		//menu bar
		$('.tag-menu-btn').on('click', function() {
			$('.tag-input').tagsinput('add', this.innerHTML );
		});
		$('#remove-all').on('click', function() {
			$('.tag-input').tagsinput('removeAll');
		});

		//fix for left over text
		$('.bootstrap-tagsinput input').blur(function() {
			$(this).val('');
		});

		//add old tags if exist
		/*getJSON is equivalent to 
		$.ajax({
		  dataType: "json",
		  url: url,
		  data: data,
		  success: success
		});*/
		// url in ajax syntax: "/tags.json" for absolute url. "tags.json" for relative url.
		// however since rails using RESTFUL, update page has different url, so we need to specific the url
		if ($(".subjects").hasClass("edit") || $(".subjects").hasClass("update")) {
			$.getJSON("/subjects/" + $("#subject-edit").data("id") + "/tags.json", function(data, status) {
			  $.each(data, function( key, val ) {
			    $('.tag-input').tagsinput('add', val);
			  });
			});
		}
		
		//turn on inline mode
		$.fn.editable.defaults.mode = 'inline';
		$.fn.editable.defaults.ajaxOptions = {dataType: 'json', type: "PUT"};
		
		var subjectID = $("#subject-edit").data("id");

		function enableInlineEdit() {
			//edit inline
			$('.outline-date').editable({
		    format: 'yyyy-mm-dd', //for sending value
		    name: 'date',
		    url: '/subjects/' + subjectID + '/inline',
		    showbuttons: 'bottom'
			});
			
			$('.outline-content').editable({
		    type: 'textarea',
		    name: 'content',
		    url: '/subjects/' + subjectID + '/inline',
		    showbuttons: 'bottom'
			});
		}
		
		function change_uni_year() {
			var uni_year_id = $("#subject_uni_year_id").val();
			$.ajax({
					url:"/semesters",	
					data:'uni_year_id=' + uni_year_id,
					dataType: "json",
					success: function(data) {
						//clear old select
						$('#subject_semester_id').empty();
						//add new data to semester select
						$.each(data, function(key, value) {   
					    $('#subject_semester_id')
			          .append($("<option></option>")
			          .attr("value",value.id)
			          .text(value.name));
						});
						$('.selectpicker').selectpicker("refresh");
					}
				}
			);
		}

		$('#subject_uni_year_id').on("change", change_uni_year);
		//first time
		change_uni_year();

		/*for anchor*/
		var anchor = window.location.hash.replace("#", "");
		if (anchor != "") {
			scrollToAnchor(anchor);
		}

		/*Disable add btn when outline number is 30*/
		var val = parseInt($('#number-of-outlines-select').val());
		if (val == 30) {
			$("#new-auto-outline").attr("disabled", true);
		}
		
		/*Change outline number*/
		$('#number-of-outlines-select').on("change", function() {
			var val = parseInt($('#number-of-outlines-select').val());
			$.ajax({
			  url: $(this).data("link"),
			  data: "number_of_outlines=" + $(this).val(),
			  dataType: "script",
			  success: function() {
	  			//edit inline
					enableInlineEdit();
					if (val < 30) {
						$("#new-auto-outline").attr("disabled", false);
					} else if (val == 30) {
						$("#new-auto-outline").attr("disabled", true);
					}
			  }
			});
		});
		
		/*create new outline*/
		$("#new-auto-outline").on("click", function() {
			var val = parseInt($('#number-of-outlines-select').val());
			
			if (val < 30) {
				$.ajax({
					url: $(this).attr("href"),
					dataType: "script",
					type: "post",
		      complete: function() {
		  			//edit inline
						enableInlineEdit();
						val++;
						$('#number-of-outlines-select').val(val);
						$('.selectpicker').selectpicker("refresh");
						if (val == 30) {
							$("#new-auto-outline").attr("disabled", true);
						}
	    		}
				});
			}

			return false;
		});
		
		//edit inline
		enableInlineEdit();
	
	});
	
</script>
